---
# This pipeline requires 5 variables to be set in the CI/CD Settings
# hint for creating the base64 encoded content: `cat .ssh/id_rsa|base64|pbcopy`

# SSH_KEY - base64 encoded ssh key (think ~/.ssh/id_rsa)
# SSH_PUBLIC_KEY - base64 encoded ssh public key (think ~/.ssh/id_rsa.pub)
# AWS_CREDENTIALS - base64 encoded credentials file (think ~/.aws/credentials)
# AWS_CONFIG - base64 encoded config file (think ~/.aws/config)
# GKE_CONFIG - base64 encoded json file (think ~/.config/gcloud/someconfig.json)
image: docker:latest

services:
  - docker:dind

variables:
  DOCKER_HOST: tcp://localhost:2375
  DOCKER_DRIVER: overlay2
# images
  ANSIBLE_LINT: "quay.io/samsung_cnct/ansible-lint:latest"
  KRAKEN_TOOLS: "quay.io/samsung_cnct/kraken-tools:latest"

stages:
  - prep
  - test
  # - cleanup ?
  - build
  - publish

# build_chart:
#   stage: prep
#   only:
#     - tags
#     - branches
#   artifacts: 
#     paths:
#       - $kraken-lib
#   script:
#     - 

prep:ansible_lint:
  stage: prep
  image: $ANSIBLE_LINT
  script:
    - ansible-lint ansible/*.yaml

test:dry_run:
  stage: test
  image: $KRAKEN_TOOLS
  script:
    - PWD=`pwd` mkdir -p $PWD/.ssh
    - PWD=`pwd` echo $PWD
    - ./bin/up.sh --generate --config cluster/aws/config.yaml
    - build-scripts/update-generated-config.sh cluster/aws/config.yaml $CI_JOB_NAME-$CI_JOB_ID
    - echo $SSH_KEY | base64 -d > ./.ssh/id_rsa
    - chmod og-wrx ./.ssh/id_rsa
    - echo $SSH_PUBLIC_KEY | base64 -d > ./.ssh/id_rsa.pub
    - PWD=`pwd` ./bin/up.sh --config $PWD/cluster/aws/config.yaml --output $PWD/cluster/aws/ -t dryrun

